{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "event-container.component.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Individual timeline event container component.\n\nRepresents a single event in a timeline with the following features:\n- Displays event title and date(s)\n- Supports both single dates and date ranges (time periods)\n- Expandable/collapsible content area for event descriptions\n- Delete functionality for timeline editing\n- Drag and drop support for timeline quiz functionality\n- Automatic date formatting and display utilities\n\nThis component is designed to be used within webwriter-timeline components\nand supports both creation and quiz modes.",
          "name": "EventContainer",
          "cssProperties": [
            {
              "description": "Border style for the event container",
              "name": "--event-border"
            },
            {
              "description": "Background color of the event",
              "name": "--event-background"
            },
            {
              "description": "Text color for date display",
              "name": "--date-color"
            },
            {
              "description": "Color of the timeline line",
              "name": "--timeline-line-color"
            }
          ],
          "slots": [
            {
              "description": "Content area for event descriptions, images, lists, etc.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "event_title",
              "description": "Title/name of the timeline event.",
              "attribute": "event_title"
            },
            {
              "kind": "field",
              "name": "event_startDate",
              "type": {
                "text": "TlEventData[\"startDate\"]"
              },
              "description": "Start date of the event as an array [year, month, day].\nMonth is 1-indexed (January = 1, December = 12).\nSupports BCE dates with negative years.",
              "attribute": "event_startDate"
            },
            {
              "kind": "field",
              "name": "event_endDate",
              "type": {
                "text": "TlEventData[\"endDate\"]"
              },
              "description": "End date of the event as an array [year, month, day].\nOptional - when provided, displays the event as a time period.\nMust be after the start date.",
              "attribute": "event_endDate"
            },
            {
              "kind": "field",
              "name": "hiddenDiv",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Controls visibility of the event content area.\nWhen true, content is collapsed; when false, content is expanded.",
              "attribute": "hidden-div"
            },
            {
              "kind": "field",
              "name": "event_element",
              "description": "Container element for event content/description"
            },
            {
              "kind": "field",
              "name": "dialog",
              "type": {
                "text": "SlDialog"
              },
              "description": "Delete confirmation dialog element"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  },
                  "description": "Map of changed properties"
                }
              ],
              "description": "Lifecycle method called after the element's DOM has been updated for the first time.\nAutomatically adds a default paragraph if the event has no content."
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "showEventContent",
              "description": "Toggles the visibility of event content area.\nExpands or collapses the event description and controls the visibility\nof edit/delete buttons. Automatically adds default content if none exists."
            },
            {
              "kind": "method",
              "name": "addParagraph",
              "description": "Adds a default paragraph element to the event content area.\nCalled automatically when an event has no content and is expanded.\nCreates an editable paragraph with placeholder text."
            },
            {
              "kind": "method",
              "name": "removeEvent",
              "description": "Dispatches a request to remove this event from the timeline.\nTriggers the 'request-remove' event which is handled by the parent timeline."
            },
            {
              "kind": "method",
              "name": "getStartDate",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "description": "Converts the event's start date to a Moment object for date operations.\nUsed internally for timeline sorting and date comparisons."
            }
          ],
          "events": [
            {
              "name": "request-remove",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the delete button is clicked"
            }
          ],
          "attributes": [
            {
              "name": "event_title",
              "description": "Title/name of the timeline event.",
              "fieldName": "event_title"
            },
            {
              "name": "event_startDate",
              "type": {
                "text": "TlEventData[\"startDate\"]"
              },
              "description": "Start date of the event as an array [year, month, day].\nMonth is 1-indexed (January = 1, December = 12).\nSupports BCE dates with negative years.",
              "fieldName": "event_startDate"
            },
            {
              "name": "event_endDate",
              "type": {
                "text": "TlEventData[\"endDate\"]"
              },
              "description": "End date of the event as an array [year, month, day].\nOptional - when provided, displays the event as a time period.\nMust be after the start date.",
              "fieldName": "event_endDate"
            },
            {
              "name": "hidden-div",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Controls visibility of the event content area.\nWhen true, content is collapsed; when false, content is expanded.",
              "fieldName": "hiddenDiv"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          },
          "tagName": "event-container",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EventContainer",
          "declaration": {
            "name": "EventContainer",
            "module": "event-container.component.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "event-container.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./event-container.component"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "EventContainer",
            "module": "event-container.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "event-container",
          "declaration": {
            "name": "EventContainer",
            "module": "/event-container.component"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "event-manager.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Event management system for timeline operations.\n\nThis component handles all timeline event operations including adding, removing,\nand sorting events within the timeline. It serves as a controller that coordinates\nbetween the timeline dialog, event containers, and the main timeline component.\n\nKey responsibilities:\n- **Event Creation**: Creates new event-container elements from dialog data\n- **Event Removal**: Handles deletion of timeline events\n- **Automatic Sorting**: Maintains chronological order of events\n- **Dialog Management**: Coordinates with timeline dialog for event creation\n- **State Management**: Manages timeline state during event operations\n\nThe event manager automatically sorts events by date whenever new events are added,\nensuring the timeline maintains proper chronological order.",
          "name": "EventManager",
          "members": [
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "attribute": "tab-index"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "addEvent",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<TlEventData>"
                  },
                  "description": "Custom event containing the event data (title, dates)"
                },
                {
                  "name": "timeline",
                  "description": "The timeline element to add the event to"
                }
              ],
              "description": "Creates and adds a new event to the timeline from dialog data.\n\nThis method processes event data from the timeline dialog, creates a new\nevent-container element, configures it with the provided data, and adds it\nto the timeline. After adding, it automatically sorts all timeline events\nby date and closes the dialog."
            },
            {
              "kind": "method",
              "name": "removeEvent",
              "parameters": [
                {
                  "name": "event",
                  "description": "Custom event containing the ID of the event to remove"
                }
              ],
              "description": "Removes an event from the timeline.\n\nHandles the removal of a specific event container from the timeline\nwhen requested through the event removal system."
            },
            {
              "kind": "method",
              "name": "sortEvents",
              "parameters": [
                {
                  "name": "timeline",
                  "description": "The timeline element containing events to sort"
                }
              ],
              "description": "Sorts all timeline events in chronological order.\n\nAutomatically reorders all event-container elements within the timeline\nbased on their start dates, ensuring proper chronological sequence.\nUses the event container's getStartDate() method for date comparison."
            }
          ],
          "events": [
            {
              "description": "Relayed from event containers for event deletion",
              "name": "request-remove"
            },
            {
              "description": "Processed from timeline dialog for event creation",
              "name": "request-add"
            }
          ],
          "attributes": [
            {
              "name": "tab-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "fieldName": "tabIndex"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EventManager",
          "declaration": {
            "name": "EventManager",
            "module": "event-manager.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tl-dialog.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Dialog component for creating and editing timeline events.\n\nThis component provides a modal dialog interface for users to create new timeline events\nor edit existing ones. It includes comprehensive form validation and supports both\nsingle dates and date ranges (time periods).\n\nFeatures:\n- Event title input with validation\n- Start and end date pickers with format validation\n- Toggle for single date vs. time period events\n- Real-time form validation with error messages\n- Responsive layout for different screen sizes\n- Accessibility support with proper labeling\n\nThe dialog automatically validates date formats, ensures logical date ordering,\nand provides user-friendly error messages for validation failures.",
          "name": "TimelineDialog",
          "cssProperties": [
            {
              "description": "Background color of the dialog",
              "name": "--dialog-background"
            },
            {
              "description": "Border color for input fields",
              "name": "--input-border-color"
            },
            {
              "description": "Color for validation error messages",
              "name": "--error-text-color"
            },
            {
              "description": "Background color for disabled inputs",
              "name": "--disabled-background"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "attribute": "tab-index"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Label text for input fields (currently unused).",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "ID attribute for form elements (currently unused).",
              "attribute": "id"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Current value of the main input field.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Placeholder text for input fields.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether form fields are required for validation.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "\"input\" | \"textarea\""
              },
              "description": "Type of input component to use ('input' or 'textarea').",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "readyToFill",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the dialog form is ready to be submitted.",
              "attribute": "ready-to-fill"
            },
            {
              "kind": "field",
              "name": "useTimePeriod",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to use time period mode (start and end dates) vs single date.\nWhen true, both start and end date inputs are enabled.",
              "attribute": "use-time-period"
            },
            {
              "kind": "field",
              "name": "titleErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for event title validation.",
              "attribute": "title-error-message"
            },
            {
              "kind": "field",
              "name": "dayErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for day field validation.",
              "attribute": "day-error-message"
            },
            {
              "kind": "field",
              "name": "monthErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for month field validation.",
              "attribute": "month-error-message"
            },
            {
              "kind": "field",
              "name": "yearErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for year field validation.",
              "attribute": "year-error-message"
            },
            {
              "kind": "field",
              "name": "formatErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for date format validation.",
              "attribute": "format-error-message"
            },
            {
              "kind": "field",
              "name": "timeErrorMessage",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for time period validation.",
              "attribute": "time-error-message"
            },
            {
              "kind": "field",
              "name": "dialog",
              "type": {
                "text": "SlDialog"
              },
              "description": "Main dialog element"
            },
            {
              "kind": "field",
              "name": "eventTitle",
              "type": {
                "text": "DialogInput"
              },
              "description": "Event title input component"
            },
            {
              "kind": "field",
              "name": "startDate",
              "type": {
                "text": "DialogDatePicker"
              },
              "description": "Start date picker component"
            },
            {
              "kind": "field",
              "name": "endDate",
              "type": {
                "text": "DialogDatePicker"
              },
              "description": "End date picker component"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "default": "css` sl-dialog::part(base) { position: absolute; height: 100%; width: 100%; } sl-dialog::part(overlay) { position: absolute; width: 100%; } sl-dialog::part(panel) { min-width: 350px; } .d-width { width: 100%; } .d-input-container { padding-top: 10px; padding-bottom: 10px; display: flex; flex-wrap: wrap; gap: 16px; width: 100%; box-sizing: border-box; } dialog-date-picker { flex: 1 1 45%; min-width: 270px; max-width: 100%; box-sizing: border-box; /* padding-top: 15px; */ } @media (max-width: 600px) { .inputs-container { grid-template-columns: 1fr; gap: 8px; } } dialog-date-picker[disabled] { --sl-input-label-color: #888888; } .endDate-disabled { color: grey; } .text-error { font-size: var(--sl-input-help-text-font-size-medium); color: var(--sl-color-danger-700); } .button-container { display: flex; justify-content: space-between; align-items: center; width: 100%; padding-bottom: 15px; } .button { padding-top: 5px; width: 100px; } .d-input { width: 100%; min-width: 0; padding-bottom: 15px; } #event-title[error] { width: 100%; min-width: 0; margin-bottom: 10px; --sl-input-border-color: var(--sl-color-danger-700); box-shadow: 0 0 0 var(--sl-focus-ring-width) var(--sl-color-danger-300); border-radius: 3px; outline: none; padding-bottom:0px; } .text-error:not([hidden]) { padding-bottom: 15px; } .d-input[disabled] { --sl-input-label-color: #888888; padding-bottom: 15px; } `"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "datePicker",
              "privacy": "private",
              "default": "new DialogDatePicker()"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "showDialog",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "hideDialog",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "resetDialog"
            },
            {
              "kind": "method",
              "name": "resetEndDate"
            },
            {
              "kind": "method",
              "name": "enableSaveButton"
            },
            {
              "kind": "method",
              "name": "updateValidationErrors",
              "privacy": "private",
              "parameters": [
                {
                  "name": "startDayValidation",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "endDayValidation",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "startMonthValidation",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "endMonthValidation",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "startYearValidation",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "endYearValidation",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "startFormatValidation",
                  "type": {
                    "text": "any"
                  }
                },
                {
                  "name": "endFormatValidation",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "disableSaveButton"
            },
            {
              "kind": "method",
              "name": "evaluateTitleError"
            },
            {
              "kind": "method",
              "name": "showDayError",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "hideDayError"
            },
            {
              "kind": "method",
              "name": "showMonthError",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "hideMonthError"
            },
            {
              "kind": "method",
              "name": "showYearError",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "hideYearError"
            },
            {
              "kind": "method",
              "name": "showFormatError",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "hideFormatError"
            },
            {
              "kind": "method",
              "name": "evaluateTimeError",
              "return": {
                "type": {
                  "text": "Boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "dispatchAddEvent"
            },
            {
              "kind": "method",
              "name": "convertToMoment",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TlEventData[\"startDate\"]"
                }
              },
              "parameters": [
                {
                  "name": "datePicker",
                  "type": {
                    "text": "DialogDatePicker"
                  }
                }
              ]
            }
          ],
          "events": [
            {
              "name": "request-add",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when a valid event should be added to the timeline"
            },
            {
              "description": "Fired when day validation fails",
              "name": "show-day-validation-error"
            },
            {
              "description": "Fired when day validation passes",
              "name": "hide-day-validation-error"
            },
            {
              "description": "Fired when month validation fails",
              "name": "show-month-validation-error"
            },
            {
              "description": "Fired when month validation passes",
              "name": "hide-month-validation-error"
            },
            {
              "description": "Fired when year validation fails",
              "name": "show-year-validation-error"
            },
            {
              "description": "Fired when year validation passes",
              "name": "hide-year-validation-error"
            },
            {
              "description": "Fired when date format validation fails",
              "name": "show-format-validation-error"
            },
            {
              "description": "Fired when date format validation passes",
              "name": "hide-format-validation-error"
            }
          ],
          "attributes": [
            {
              "name": "tab-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "fieldName": "tabIndex"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Label text for input fields (currently unused).",
              "fieldName": "label"
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "ID attribute for form elements (currently unused).",
              "fieldName": "id"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Current value of the main input field.",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Placeholder text for input fields.",
              "fieldName": "placeholder"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether form fields are required for validation.",
              "fieldName": "required"
            },
            {
              "name": "type",
              "type": {
                "text": "\"input\" | \"textarea\""
              },
              "description": "Type of input component to use ('input' or 'textarea').",
              "fieldName": "type"
            },
            {
              "name": "ready-to-fill",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the dialog form is ready to be submitted.",
              "fieldName": "readyToFill"
            },
            {
              "name": "use-time-period",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to use time period mode (start and end dates) vs single date.\nWhen true, both start and end date inputs are enabled.",
              "fieldName": "useTimePeriod"
            },
            {
              "name": "title-error-message",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for event title validation.",
              "fieldName": "titleErrorMessage"
            },
            {
              "name": "day-error-message",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for day field validation.",
              "fieldName": "dayErrorMessage"
            },
            {
              "name": "month-error-message",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for month field validation.",
              "fieldName": "monthErrorMessage"
            },
            {
              "name": "year-error-message",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for year field validation.",
              "fieldName": "yearErrorMessage"
            },
            {
              "name": "format-error-message",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for date format validation.",
              "fieldName": "formatErrorMessage"
            },
            {
              "name": "time-error-message",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Error message for time period validation.",
              "fieldName": "timeErrorMessage"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimelineDialog",
          "declaration": {
            "name": "TimelineDialog",
            "module": "tl-dialog.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tl-event-data.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TlEventHelper",
          "members": [
            {
              "kind": "method",
              "name": "convertToDisplayDate",
              "static": true,
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "TlEventData[\"startDate\"]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "convertToDisplayDateFormat",
              "static": true,
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "TlEventData[\"startDate\"]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "displayDate",
              "static": true,
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "TlEventData[\"startDate\"]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkForYearBC",
              "static": true,
              "parameters": [
                {
                  "name": "date",
                  "type": {
                    "text": "TlEventData[\"startDate\"]"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TlEventHelper",
          "declaration": {
            "name": "TlEventHelper",
            "module": "tl-event-data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dialog-elements/d-datepicker.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Date picker component for timeline event dates.\n\nA specialized date input component that provides separate fields for day, month, and year\nwith comprehensive validation. Designed specifically for timeline events which may include\nhistorical dates including BCE (negative years).\n\nFeatures:\n- **Separate Input Fields**: Day, month, year inputs for precise control\n- **Historical Date Support**: Handles BCE dates with negative years\n- **Real-time Validation**: Validates day/month ranges and date logic\n- **Format Validation**: Ensures proper date formatting\n- **Visual Feedback**: Error states and validation messages\n- **Disabled State Support**: Can be disabled for end dates in single-date mode\n- **Accessibility**: Proper labeling and keyboard navigation\n\nThe component automatically validates input as users type and provides\nimmediate feedback for invalid entries.",
          "name": "DialogDatePicker",
          "cssProperties": [
            {
              "description": "Background color of date inputs",
              "name": "--date-input-background"
            },
            {
              "description": "Border style for date inputs",
              "name": "--date-input-border"
            },
            {
              "description": "Border style for validation errors",
              "name": "--date-input-error-border"
            },
            {
              "description": "Background color when disabled",
              "name": "--disabled-background"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "day",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Day component of the date (1-31).\nAutomatically zero-padded to 2 digits on input.",
              "attribute": "day"
            },
            {
              "kind": "field",
              "name": "month",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Month component of the date (1-12).\nJanuary = 1, December = 12.",
              "attribute": "month"
            },
            {
              "kind": "field",
              "name": "year",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Year component of the date.\nSupports negative values for BCE dates.",
              "attribute": "year"
            },
            {
              "kind": "field",
              "name": "date",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Complete date string (currently unused).",
              "attribute": "date"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Label text displayed above the date picker.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "useEndDate",
              "description": "Whether this is an end date picker in time period mode.",
              "attribute": "use-end-date"
            },
            {
              "kind": "field",
              "name": "useTimePeriod",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the parent dialog is in time period mode.\nWhen false and useEndDate is true, this picker is disabled.",
              "attribute": "use-time-period"
            },
            {
              "kind": "field",
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the date picker has validation errors.",
              "attribute": "invalid"
            },
            {
              "kind": "field",
              "name": "dates",
              "description": "All date input elements"
            },
            {
              "kind": "field",
              "name": "dayInput",
              "type": {
                "text": "SlInput"
              },
              "description": "Day input element"
            },
            {
              "kind": "field",
              "name": "monthInput",
              "type": {
                "text": "SlInput"
              },
              "description": "Month input element"
            },
            {
              "kind": "field",
              "name": "yearInput",
              "type": {
                "text": "SlInput"
              },
              "description": "Year input element"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "default": "css` .date-div-disabled { background: #f7f7f8; } .date-div, .date-div-disabled { display: flex; flex-direction: row; width: 89%; min-width: 245px; } .date-container, .date-container-disabled { overflow: hidden; display: flex; flex-direction: row; align-items: center; border: 1px solid #d6d6da; border-radius: 5px; background: white; box-sizing: border-box; width: 100%; min-width: 0; } .date-container-disabled { background: #f7f7f8; } .divider { color: lightgray; width: 10px; align-self: center; } label { font-size: 1rem; font-weight: 400; margin-bottom: 0.5rem; } .date { --sl-input-border-color: transparent; --sl-input-border-width: 0; --sl-input-padding-vertical: 0; --sl-input-padding-horizontal: 1rem; text-align: center; min-width: 3%; } .date[disabled] { --sl-input-color: gray; } .date[invalid] { --sl-input-border-color: var(--sl-color-danger-600); box-shadow: 0 0 0 var(--sl-focus-ring-width) var(--sl-color-danger-300); outline: none; border-radius: 3px; } `"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "validateInput",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validateYearInput",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validateDay"
            },
            {
              "kind": "method",
              "name": "validateMonth"
            },
            {
              "kind": "method",
              "name": "validateYear"
            },
            {
              "kind": "method",
              "name": "validateFormat"
            },
            {
              "kind": "method",
              "name": "validateForErrors"
            },
            {
              "kind": "method",
              "name": "reset"
            }
          ],
          "events": [
            {
              "name": "show-day-validation-error",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when day validation fails"
            },
            {
              "name": "hide-day-validation-error",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when day validation passes"
            },
            {
              "name": "show-month-validation-error",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when month validation fails"
            },
            {
              "name": "hide-month-validation-error",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when month validation passes"
            },
            {
              "name": "show-year-validation-error",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when year validation fails"
            },
            {
              "name": "hide-year-validation-error",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when year validation passes"
            },
            {
              "name": "show-format-validation-error",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when date format validation fails"
            },
            {
              "name": "hide-format-validation-error",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when date format validation passes"
            }
          ],
          "attributes": [
            {
              "name": "day",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Day component of the date (1-31).\nAutomatically zero-padded to 2 digits on input.",
              "fieldName": "day"
            },
            {
              "name": "month",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Month component of the date (1-12).\nJanuary = 1, December = 12.",
              "fieldName": "month"
            },
            {
              "name": "year",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Year component of the date.\nSupports negative values for BCE dates.",
              "fieldName": "year"
            },
            {
              "name": "date",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Complete date string (currently unused).",
              "fieldName": "date"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Label text displayed above the date picker.",
              "fieldName": "label"
            },
            {
              "name": "use-end-date",
              "description": "Whether this is an end date picker in time period mode.",
              "fieldName": "useEndDate"
            },
            {
              "name": "use-time-period",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the parent dialog is in time period mode.\nWhen false and useEndDate is true, this picker is disabled.",
              "fieldName": "useTimePeriod"
            },
            {
              "name": "invalid",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the date picker has validation errors.",
              "fieldName": "invalid"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DialogDatePicker",
          "declaration": {
            "name": "DialogDatePicker",
            "module": "dialog-elements/d-datepicker.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dialog-elements/d-input.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Input component for timeline dialog forms.\n\nA specialized input wrapper that provides consistent styling and behavior\nfor use within timeline dialogs. Supports both single-line input and textarea\nmodes with validation states and accessibility features.\n\nFeatures:\n- Consistent styling with dialog theme\n- Support for required field validation\n- Clearable input functionality\n- Responsive width handling\n- Integration with Shoelace design system",
          "name": "DialogInput",
          "cssProperties": [
            {
              "description": "Background color of the input",
              "name": "--input-background"
            },
            {
              "description": "Border style for the input",
              "name": "--input-border"
            },
            {
              "description": "Border style when focused",
              "name": "--input-focus-border"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "attribute": "tab-index"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Label text displayed above the input field.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Unique identifier for the input element.",
              "attribute": "id"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Current value of the input field.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Placeholder text shown when input is empty.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the input field is required for form validation.",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "disabled",
              "description": "Whether the input field is disabled.",
              "attribute": "disabled"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "\"input\" | \"textarea\""
              },
              "description": "Type of input component - 'input' for single line, 'textarea' for multi-line.",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "default": "css` :host { display: block; /* margin-bottom: 20px; */ } .half-input { min-width: 45%; } `"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "setTnput",
              "parameters": [
                {
                  "name": "event",
                  "description": "The change event from the input element"
                }
              ],
              "description": "Updates the component's value when the input changes.\nCalled automatically by the sl-change event from the Shoelace input."
            }
          ],
          "events": [
            {
              "description": "Fired when the input value changes",
              "name": "sl-change"
            },
            {
              "description": "Fired on each keystroke",
              "name": "sl-input"
            }
          ],
          "attributes": [
            {
              "name": "tab-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "fieldName": "tabIndex"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Label text displayed above the input field.",
              "fieldName": "label"
            },
            {
              "name": "id",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Unique identifier for the input element.",
              "fieldName": "id"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Current value of the input field.",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "\"\"",
              "description": "Placeholder text shown when input is empty.",
              "fieldName": "placeholder"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the input field is required for form validation.",
              "fieldName": "required"
            },
            {
              "name": "disabled",
              "description": "Whether the input field is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "type",
              "type": {
                "text": "\"input\" | \"textarea\""
              },
              "description": "Type of input component - 'input' for single line, 'textarea' for multi-line.",
              "fieldName": "type"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DialogInput",
          "declaration": {
            "name": "DialogInput",
            "module": "dialog-elements/d-input.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dialog-elements/d-toggle.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Toggle switch component for timeline dialog forms.\n\nA custom toggle switch specifically designed for switching between single date\nand time period modes in timeline event creation. Features smooth animations\nand responsive design.\n\nFeatures:\n- **Smooth Animation**: CSS transitions for toggle movement\n- **Dual Labels**: Shows \"Single Date\" and \"Time Period\" options\n- **Responsive Design**: Adapts to different screen sizes\n- **Custom Styling**: Matches timeline dialog theme\n- **Accessibility**: Proper keyboard navigation support\n\nThe toggle automatically updates the parent dialog's time period mode\nand enables/disables the end date picker accordingly.",
          "name": "DialogToggle",
          "cssProperties": [
            {
              "description": "Background color of the toggle",
              "name": "--toggle-background"
            },
            {
              "description": "Border style for the toggle",
              "name": "--toggle-border"
            },
            {
              "description": "Background color of active state",
              "name": "--toggle-active-background"
            },
            {
              "description": "Border color of active state",
              "name": "--toggle-active-border"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "useTimePeriod",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the toggle is in time period mode.\nWhen true, shows \"Time Period\" as selected; when false, shows \"Single Date\".",
              "attribute": "use-time-period"
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "attribute": "tab-index"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "default": "css` .toggle { min-height: 15px; width: 100%; background-color: #ffffff; border-radius: 40px; border: 1px solid #d6d6da; position: relative; display: flex; align-items: center; cursor: pointer; padding: 2px; box-sizing: border-box; /* margin-bottom: 8px; */ } input[type=\"checkbox\"] { display: none; } .toggle label { width: 50%; height: 100%; border-radius: 40px; position: absolute; background-color: #e5f4fc; border: 1px solid #83b9e0; transition: transform 0.5s ease; z-index: 1; cursor: pointer; left: 0; margin: 0; box-sizing: border-box; } input[type=\"checkbox\"]:checked + label { transform: translateX(100%); } .labels-container { display: flex; justify-content: space-between; width: 100%; position: relative; z-index: 2; } .label { flex: 1; font-size: 0.75em; color: black; text-align: center; padding: 8px; word-wrap: break-word; hyphens: auto; display: flex; align-items: center; justify-content: center; min-height: 15px; } .label-left { margin-right: auto; } .label-right { margin-left: auto; } @media (max-width: 300px) { .toggle { min-height: 50px; } .label { font-size: 0.7em; } } `"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "toggleChange",
              "description": "Handles toggle state changes and dispatches custom event.\nCalled when the user clicks the toggle to switch between single date\nand time period modes."
            }
          ],
          "events": [
            {
              "name": "toggle-change",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when the toggle state changes"
            }
          ],
          "attributes": [
            {
              "name": "use-time-period",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the toggle is in time period mode.\nWhen true, shows \"Time Period\" as selected; when false, shows \"Single Date\".",
              "fieldName": "useTimePeriod"
            },
            {
              "name": "tab-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "fieldName": "tabIndex"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DialogToggle",
          "declaration": {
            "name": "DialogToggle",
            "module": "dialog-elements/d-toggle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "quiz/q-date-field.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Timeline date display component for quiz interface.\n\nThis component renders the timeline portion of the quiz, displaying chronological\ndates with drop zones where users can place event titles. It provides visual\nfeedback for drag and drop operations and displays quiz results.\n\nFeatures:\n- **Timeline Visualization**: Shows dates in chronological order with connecting lines\n- **Drop Zones**: Interactive areas for dropping event titles\n- **Visual Feedback**: Color-coded results (green for correct, red for incorrect)\n- **Drag Management**: Handles title removal during drag operations\n- **Responsive Design**: Scrollable container for long timelines",
          "name": "QuizDateField",
          "cssProperties": [
            {
              "description": "Color of the timeline line",
              "name": "--timeline-color"
            },
            {
              "description": "Border style for drop zones",
              "name": "--drop-zone-border"
            },
            {
              "description": "Background color for correct matches",
              "name": "--match-background"
            },
            {
              "description": "Background color for incorrect matches",
              "name": "--mismatch-background"
            }
          ],
          "slots": [
            {
              "description": "Container for individual date elements with drop zones",
              "name": "quiz-element-date"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "dates",
              "description": "Array of date strings for the quiz timeline.",
              "attribute": "dates"
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "attribute": "tab-index"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "default": "css` .timeline-parent { display: flex; justify-content: start; flex-direction: row; position: relative; vertical-align: center; max-height: 100%; } .timeline { min-height: 15px; height: auto; width: 100%; border-left: 2px solid #484848; position: relative; } .timeline::after { content: \"\"; position: absolute; bottom: -10px; transform: translateX(-58%); width: 0; height: 0; border-left: 6px solid transparent; border-right: 6px solid transparent; border-top: 10px solid #484848; z-index: 4; } .drop-section[dropped] { border: 3px solid #E0E0E0; border-radius: 5px; font-weight: 500; font-size: 16px; color: #333333; flex-direction: column; } .drop-section[quiz-result=\"match\"] { background: #cdefcf; color: #4aad4d; border: 2px solid #4aad4d; } .drop-section[quiz-result=\"mismatch\"] { background: #f5d1ce; color: #c92c1b; border: 2px solid #e58e85; } .drop-section > * { max-width: 100%; } .date-line { min-width:150px; flex-grow: 1; height: 2px; width: 100%; background: #484848; display: flex; justify-content: space-between; align-items: center; grid-column: 1; grid-row: 2; transform: translateX(-3.5px); } .date-line::before { content: \"\\ \"; display: inline-block; width: 6px; height: 6px; border-radius: 50%; background: #484848; } .new-date-container { display: grid; align-items: center; position: relative; padding-left: 0px; width: 100%; } `"
            },
            {
              "kind": "method",
              "name": "removeTitleForDragging",
              "parameters": [
                {
                  "name": "title",
                  "description": "The title text to remove from this container"
                }
              ],
              "description": "Removes title elements during drag operations.\nCalled when a title is being dragged to another location to prevent duplicates."
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "attributes": [
            {
              "name": "dates",
              "description": "Array of date strings for the quiz timeline.",
              "fieldName": "dates"
            },
            {
              "name": "tab-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "fieldName": "tabIndex"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "QuizDateField",
          "declaration": {
            "name": "QuizDateField",
            "module": "quiz/q-date-field.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "quiz/q-element-date.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Individual date element with drop zone for quiz interface.\n\nRepresents a single date point on the quiz timeline with an interactive drop zone\nwhere users can drop event titles. Provides visual feedback during drag operations\nand displays results after quiz submission.\n\nFeatures:\n- **Interactive Drop Zone**: Accepts dragged title elements\n- **Visual Feedback**: Shows drag states and quiz results\n- **Date Display**: Shows formatted date information\n- **Result Indication**: Color-coded feedback for correct/incorrect matches",
          "name": "QuizElementDate",
          "cssProperties": [
            {
              "description": "Background color of drop zone",
              "name": "--drop-zone-background"
            },
            {
              "description": "Border style for drop zone",
              "name": "--drop-zone-border"
            },
            {
              "description": "Border style during drag hover",
              "name": "--dragover-border"
            },
            {
              "description": "Colors for correct match display",
              "name": "--match-colors"
            },
            {
              "description": "Colors for incorrect match display",
              "name": "--mismatch-colors"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "title_element",
              "type": {
                "text": "HTMLDivElement"
              },
              "description": "Date element container (unused)"
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "attribute": "tab-index"
            },
            {
              "kind": "field",
              "name": "date",
              "description": "Date value for this quiz element.",
              "attribute": "date"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "default": "css` .event:first-child { display: flex; align-items: flex-start; padding: 16px; padding-top: 5px; padding-left: 0px; position: relative; width: 100%; } .date-container { display: grid; align-items: center; position: relative; } .event-date { font-size: 14px; font-weight: 700; color: #484848; grid-column: 1; grid-row: 1; padding-left: 7px; padding-right: 5px; width: 100%; } .event-title-container { border: 3px solid #e0e0e0; border-radius: 5px; padding: 8px; display: flex; align-items: left; justify-content: space-between; width: 100%; max-width: max-content; max-height: 400px; overflow-wrap: break-word; overflow-y: auto; flex-direction: column; transform: translateX(-3.5px); } .drop-section { display: flex; align-items: center; background: white; border: 2px dashed #d6d6da; border-radius: 7px; margin-right: 5px; min-height: 45px; min-width: 50px; width: max-content; max-width: 100%; overflow-wrap: break-word; overflow-y: auto; flex-direction: column; padding: 8px; flex-direction: column; flex-wrap: wrap; overflow-wrap: break-word; overflow-y: auto; box-sizing: border-box; transform: translateX(-3.5px); padding-top: 8px; padding-bottom: 8px; } .drop-section[dragover] { border: 2px dashed #83b9e0; } .drop-section[dropped] { border: 3px solid #e0e0e0; border-radius: 5px; font-weight: 500; font-size: 16px; color: #333333; flex-direction: column; } .drop-section[quiz-result=\"match\"] { background: #cdefcf; color: #4aad4d; border: 2px solid #4aad4d; } .drop-section[quiz-result=\"mismatch\"] { background: #f5d1ce; color: #c92c1b; border: 2px solid #e58e85; } .drop-section > * { max-width: 100%; } .date-line { min-width: 150px; flex-grow: 1; height: 2px; width: 100%; background: #484848; display: flex; justify-content: space-between; align-items: center; grid-column: 1; grid-row: 2; transform: translateX(-3.5px); } .date-line::before { content: \"\\ \"; display: inline-block; width: 6px; height: 6px; border-radius: 50%; background: #484848; } .event { display: flex; align-items: flex-start; padding: 15px; padding-left: 0px; position: relative; width: 100%; } .dropped-title { padding: 8px; margin: 4px; background: white; border: 1px solid #d6d6da; border-radius: 5px; cursor: grab; font-weight: 500; font-size: 16px; color: #333333; width: fit-content; user-select: none; } .dropped-title.dragging { opacity: 0.5; border: 2px solid #83b9e0; background: #e5f4fc; } .drop-section { min-height: 45px; min-width: 50px; width: max-content; } `"
            },
            {
              "kind": "method",
              "name": "droppingTitles",
              "privacy": "public",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "events": [
            {
              "name": "title-dropped-in-section",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when a title is dropped in this date's zone"
            }
          ],
          "attributes": [
            {
              "name": "tab-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "fieldName": "tabIndex"
            },
            {
              "name": "date",
              "description": "Date value for this quiz element.",
              "fieldName": "date"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "QuizElementDate",
          "declaration": {
            "name": "QuizElementDate",
            "module": "quiz/q-element-date.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "quiz/q-element-title.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Draggable title element for quiz interface.\n\nRepresents an individual event title that users can drag and drop onto\ncorresponding dates in the quiz timeline. Provides visual feedback during\ndrag operations and displays quiz results.\n\nFeatures:\n- **Draggable Interface**: Can be dragged to date drop zones\n- **Visual States**: Shows dragging, correct/incorrect match states\n- **Touch Support**: Works with both mouse and touch interactions\n- **Result Display**: Color-coded feedback after quiz submission",
          "name": "QuizElementTitle",
          "cssProperties": [
            {
              "description": "Background color of title element",
              "name": "--title-background"
            },
            {
              "description": "Border style for title element",
              "name": "--title-border"
            },
            {
              "description": "Background during drag operations",
              "name": "--dragging-background"
            },
            {
              "description": "Colors for correct match indication",
              "name": "--match-colors"
            },
            {
              "description": "Colors for incorrect match indication",
              "name": "--mismatch-colors"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "title_element",
              "type": {
                "text": "HTMLDivElement"
              },
              "description": "Title element container (unused)"
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "attribute": "tab-index"
            },
            {
              "kind": "field",
              "name": "title",
              "description": "Text content of the title element.",
              "attribute": "title"
            },
            {
              "kind": "field",
              "name": "dropped",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether the title has been dropped in a date zone.",
              "attribute": "dropped"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "default": "css` .title-border { display: flex; justify-content: center; align-items: center; background: white; border: 1px solid #d6d6da; border-radius: 7px; margin: 5px; width: auto; max-width: calc(100% - 10px); cursor: grab; font-weight: 500; font-size: 1.15rem; color: #333333; min-height: 35px; flex-wrap: wrap; text-align: left; padding: 5px 10px; box-sizing: border-box; overflow-x: scroll; flex-direction: row; } .title-border.dragging { background: #e5f4fc; border: 2px solid #83b9e0; cursor: grabbing; } .title-border[match] { background: #cdefcf; color: #4aad4d; border: 2px solid #4aad4d; } .title-border[mismatch] { background: #f5d1ce; color: #c92c1b; border: 2px solid #e58e85; } `"
            },
            {
              "kind": "method",
              "name": "startDrag",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "DragEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "endDrag",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "events": [
            {
              "name": "drag-start-title",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when a drag operation begins"
            }
          ],
          "attributes": [
            {
              "name": "tab-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "fieldName": "tabIndex"
            },
            {
              "name": "title",
              "description": "Text content of the title element.",
              "fieldName": "title"
            },
            {
              "name": "dropped",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "description": "Whether the title has been dropped in a date zone.",
              "fieldName": "dropped"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "QuizElementTitle",
          "declaration": {
            "name": "QuizElementTitle",
            "module": "quiz/q-element-title.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "quiz/q-main-quiz.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Interactive quiz component for timeline knowledge testing.\n\nThis component transforms timeline events into an interactive drag-and-drop quiz\nwhere users match event titles to their corresponding dates. It provides:\n\n- **Drag-and-Drop Interface**: Users drag event titles to timeline date positions\n- **Real-time Feedback**: Visual indicators show correct/incorrect matches\n- **Scoring System**: Configurable feedback options (1-4 levels of detail)\n- **Reset Functionality**: Users can reset and retry the quiz\n- **Randomized Order**: Event titles are randomly shuffled each time\n- **Responsive Design**: Works on different screen sizes with scrollable areas\n\nThe quiz automatically generates questions from timeline events and provides\nimmediate visual feedback when users submit their answers.",
          "name": "MainQuiz",
          "cssProperties": [
            {
              "description": "Background color of the quiz area",
              "name": "--quiz-background"
            },
            {
              "description": "Border style for quiz containers",
              "name": "--quiz-border"
            },
            {
              "description": "Color for correct matches",
              "name": "--match-color"
            },
            {
              "description": "Color for incorrect matches",
              "name": "--mismatch-color"
            },
            {
              "description": "Color during drag operations",
              "name": "--dragging-color"
            }
          ],
          "slots": [
            {
              "description": "Container for quiz date elements",
              "name": "quiz-element-date"
            },
            {
              "description": "Container for quiz title elements",
              "name": "quiz-element-title"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "attribute": "tab-index"
            },
            {
              "kind": "field",
              "name": "event_startDate",
              "type": {
                "text": "TlEventData[\"startDate\"]"
              },
              "description": "Start date array for event timing (inherited from timeline events).",
              "attribute": "event_startDate"
            },
            {
              "kind": "field",
              "name": "event_endDate",
              "type": {
                "text": "TlEventData[\"endDate\"]"
              },
              "description": "End date array for event timing (inherited from timeline events).",
              "attribute": "event_endDate"
            },
            {
              "kind": "field",
              "name": "appendedEvents",
              "type": {
                "text": "Array<{ date: String; title: string }>"
              },
              "default": "[]",
              "description": "Array of events that have been added to the quiz.\nEach item contains date and title information for quiz generation.",
              "attribute": "appended-events"
            },
            {
              "kind": "field",
              "name": "matchCount",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Number of correct matches achieved by the user.\nUpdated automatically as quiz progresses.",
              "attribute": "match-count"
            },
            {
              "kind": "field",
              "name": "score",
              "description": "Final quiz score (percentage or points).\nCalculated based on correct matches vs total questions.",
              "attribute": "score"
            },
            {
              "kind": "field",
              "name": "selectedOption",
              "description": "Selected feedback option (1-4) determining result display detail.\n- 1: Basic results only\n- 2: Score with correct answers\n- 3: Detailed explanations\n- 4: Progress tracking",
              "attribute": "selected-option"
            },
            {
              "kind": "field",
              "name": "drag",
              "description": "Current drag operation data (internal use).",
              "attribute": "drag"
            },
            {
              "kind": "field",
              "name": "source",
              "description": "Drag source element (internal use).",
              "attribute": "source"
            },
            {
              "kind": "field",
              "name": "target",
              "description": "Drag target element (internal use).",
              "attribute": "target"
            },
            {
              "kind": "field",
              "name": "activateCheck",
              "description": "Whether the check/submit button is activated.",
              "attribute": "activate-check"
            },
            {
              "kind": "field",
              "name": "date_container",
              "type": {
                "text": "QuizDateField"
              },
              "description": "Date container component for quiz timeline display"
            },
            {
              "kind": "field",
              "name": "title_container",
              "type": {
                "text": "QuizTitles"
              },
              "description": "Title container component for draggable quiz elements"
            },
            {
              "kind": "field",
              "name": "score_feedback",
              "type": {
                "text": "HTMLParagraphElement"
              },
              "description": "Score feedback display element"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "titleDragStart",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "titleDropped",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "findSelection",
              "parameters": [
                {
                  "name": "selected"
                }
              ]
            },
            {
              "kind": "method",
              "name": "startQuiz",
              "parameters": [
                {
                  "name": "events",
                  "type": {
                    "text": "EventContainer[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resetQuiz"
            },
            {
              "kind": "method",
              "name": "initializeDate",
              "parameters": [
                {
                  "name": "date"
                }
              ]
            },
            {
              "kind": "method",
              "name": "initializeTitle",
              "parameters": [
                {
                  "name": "title"
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkMatchAndCalculate"
            }
          ],
          "events": [
            {
              "name": "show-quiz-feedback-error",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when quiz feedback validation fails"
            },
            {
              "description": "Fired when a title is dropped in a date section",
              "name": "title-dropped-in-section"
            },
            {
              "description": "Fired when a title is dropped back in title area",
              "name": "title-dropped-in-titles"
            },
            {
              "description": "Fired when a title drag operation begins",
              "name": "drag-start-title"
            }
          ],
          "attributes": [
            {
              "name": "tab-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "fieldName": "tabIndex"
            },
            {
              "name": "event_startDate",
              "type": {
                "text": "TlEventData[\"startDate\"]"
              },
              "description": "Start date array for event timing (inherited from timeline events).",
              "fieldName": "event_startDate"
            },
            {
              "name": "event_endDate",
              "type": {
                "text": "TlEventData[\"endDate\"]"
              },
              "description": "End date array for event timing (inherited from timeline events).",
              "fieldName": "event_endDate"
            },
            {
              "name": "appended-events",
              "type": {
                "text": "Array<{ date: String; title: string }>"
              },
              "default": "[]",
              "description": "Array of events that have been added to the quiz.\nEach item contains date and title information for quiz generation.",
              "fieldName": "appendedEvents"
            },
            {
              "name": "match-count",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Number of correct matches achieved by the user.\nUpdated automatically as quiz progresses.",
              "fieldName": "matchCount"
            },
            {
              "name": "score",
              "description": "Final quiz score (percentage or points).\nCalculated based on correct matches vs total questions.",
              "fieldName": "score"
            },
            {
              "name": "selected-option",
              "description": "Selected feedback option (1-4) determining result display detail.\n- 1: Basic results only\n- 2: Score with correct answers\n- 3: Detailed explanations\n- 4: Progress tracking",
              "fieldName": "selectedOption"
            },
            {
              "name": "drag",
              "description": "Current drag operation data (internal use).",
              "fieldName": "drag"
            },
            {
              "name": "source",
              "description": "Drag source element (internal use).",
              "fieldName": "source"
            },
            {
              "name": "target",
              "description": "Drag target element (internal use).",
              "fieldName": "target"
            },
            {
              "name": "activate-check",
              "description": "Whether the check/submit button is activated.",
              "fieldName": "activateCheck"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MainQuiz",
          "declaration": {
            "name": "MainQuiz",
            "module": "quiz/q-main-quiz.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "quiz/q-titles.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Container component for quiz title elements.\n\nThis component serves as the source container for draggable title elements in the\nquiz interface. It displays all available event titles that users can drag to\nmatch with corresponding dates on the timeline.\n\nFeatures:\n- **Drag Source Container**: Holds draggable title elements\n- **Drop Target**: Accepts titles being dropped back from date sections\n- **Randomization**: Can shuffle title order for quiz variety\n- **Scrollable Area**: Handles overflow with scrolling\n- **Visual Feedback**: Shows drag states and drop zones\n\nThe component automatically handles drag and drop events and communicates\nwith the parent quiz component about title movements.",
          "name": "QuizTitles",
          "cssProperties": [
            {
              "description": "Background color of the titles container",
              "name": "--titles-background"
            },
            {
              "description": "Border style for the container",
              "name": "--titles-border"
            },
            {
              "description": "Background color during drag operations",
              "name": "--dragging-background"
            },
            {
              "description": "Border color during drag operations",
              "name": "--dragging-border"
            }
          ],
          "slots": [
            {
              "description": "Container for quiz-element-title components",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "titles",
              "description": "Array of title strings for the quiz.",
              "attribute": "titles"
            },
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "attribute": "tab-index"
            },
            {
              "kind": "field",
              "name": "titleChildren",
              "description": "Whether this container has title child elements.",
              "attribute": "title-children"
            },
            {
              "kind": "field",
              "name": "title_element",
              "type": {
                "text": "HTMLDivElement"
              },
              "description": "Title element container (unused)"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "default": "css` .border { display: flex; flex-direction: row; flex-wrap: wrap; align-items: flex-start; border: 1px solid #d6d6da; background: #f7f7f8; border-radius: 5px; padding: 10px; box-sizing: border-box; min-height: 70px; width: 100%; max-height: 100%; height: 100%; overflow-y: scroll; } .dragging { background: #e5f4fc; border: 2px solid #83b9e0; } `"
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "randomiseTitleOrder",
              "description": "Randomizes the order of title elements within the container.\nCalled to shuffle quiz titles for variety between quiz attempts."
            },
            {
              "kind": "method",
              "name": "droppingTitles",
              "description": "Handles drop events when titles are dropped back into this container.\nDispatches a custom event to notify the parent quiz component about the drop."
            },
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "events": [
            {
              "name": "title-dropped-in-titles",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired when a title is dropped back in this container"
            }
          ],
          "attributes": [
            {
              "name": "titles",
              "description": "Array of title strings for the quiz.",
              "fieldName": "titles"
            },
            {
              "name": "tab-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "fieldName": "tabIndex"
            },
            {
              "name": "title-children",
              "description": "Whether this container has title child elements.",
              "fieldName": "titleChildren"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "QuizTitles",
          "declaration": {
            "name": "QuizTitles",
            "module": "quiz/q-titles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "widgets/webwriter-timeline.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Interactive timeline widget for WebWriter applications.\n\nThis web component creates an interactive timeline that allows users to:\n- Create and manage timeline events with dates and descriptions\n- Switch between timeline creation and quiz modes\n- Test knowledge with drag-and-drop quiz functionality\n- Customize panel visibility (timeline only, quiz only, or both)\n- Configure quiz feedback options\n\nThe component consists of two main panels:\n1. **Timeline Panel**: For creating and editing timeline events\n2. **Quiz Panel**: For testing knowledge with interactive quiz features",
          "name": "WebWriterTimeline",
          "cssProperties": [
            {
              "description": "Background color of the timeline area",
              "name": "--timeline-background"
            },
            {
              "description": "Border style for timeline elements",
              "name": "--timeline-border"
            },
            {
              "description": "Background color of the quiz area",
              "name": "--quiz-background"
            },
            {
              "description": "Border style for panel separators",
              "name": "--panel-border"
            }
          ],
          "slots": [
            {
              "description": "Container for timeline events (event-container elements)",
              "name": "event-slot"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "tabIndex",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "attribute": "tab-index"
            },
            {
              "kind": "field",
              "name": "currentPanel",
              "type": {
                "text": "string"
              },
              "description": "Currently active panel ('timeline' or 'quiz').",
              "attribute": "current-panel"
            },
            {
              "kind": "field",
              "name": "_panelVisibility",
              "type": {
                "text": "string"
              },
              "description": "Controls which panels are visible in the interface.",
              "attribute": "panelvisibility"
            },
            {
              "kind": "field",
              "name": "panelVisibility",
              "type": {
                "text": "string"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "quizFeedbackOption",
              "description": "Selected quiz feedback option (1-4).\nDetermines what feedback is shown after quiz completion:\n- 1: Show correct answers only\n- 2: Show score and correct answers\n- 3: Show detailed explanations\n- 4: Show progress tracking",
              "attribute": "quiz-feedback-option"
            },
            {
              "kind": "field",
              "name": "quizFeedbackSelecter",
              "type": {
                "text": "SlSelect"
              },
              "description": "Quiz feedback selection dropdown element"
            },
            {
              "kind": "field",
              "name": "quiz",
              "type": {
                "text": "MainQuiz"
              },
              "description": "Main quiz component instance"
            },
            {
              "kind": "field",
              "name": "dialog",
              "type": {
                "text": "TimelineDialog"
              },
              "description": "Timeline dialog component for creating/editing events"
            },
            {
              "kind": "field",
              "name": "timelinePanel",
              "type": {
                "text": "SlTab"
              },
              "description": "Timeline panel tab element"
            },
            {
              "kind": "field",
              "name": "quizPanel",
              "type": {
                "text": "SlTab"
              },
              "description": "Quiz panel tab element"
            },
            {
              "kind": "field",
              "name": "quizToggle",
              "type": {
                "text": "SlSwitch"
              },
              "description": "Toggle switch for enabling/disabling quiz functionality"
            },
            {
              "kind": "field",
              "name": "feedbackError",
              "type": {
                "text": "HTMLDivElement"
              },
              "description": "Error message container for quiz feedback validation"
            },
            {
              "kind": "field",
              "name": "addToolTip",
              "type": {
                "text": "SlTooltip"
              },
              "description": "Tooltip for the add event button"
            },
            {
              "kind": "field",
              "name": "tabGroup",
              "type": {
                "text": "SlTabGroup"
              },
              "description": "Tab group container for switching between panels"
            },
            {
              "kind": "field",
              "name": "styles",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "scopedElements",
              "static": true,
              "readonly": true
            },
            {
              "kind": "field",
              "name": "eventManager",
              "privacy": "private",
              "default": "new EventManager()",
              "description": "Event manager instance for handling timeline event operations"
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  },
                  "description": "Map of changed properties"
                }
              ],
              "description": "Lifecycle method called after the element's DOM has been updated for the first time.\nInitializes component state, sets up event listeners, configures help system positioning,\nand handles initial panel visibility based on configuration."
            },
            {
              "kind": "method",
              "name": "updated",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  },
                  "description": "Map of changed properties"
                }
              ],
              "description": "Lifecycle method called when component properties change.\nHandles panel switching when currentPanel property changes."
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "checkSelectedTab",
              "parameters": [
                {
                  "name": "selectedTab",
                  "description": "The name of the selected tab ('quiz' or 'timeline')"
                }
              ],
              "description": "Handles tab selection changes between timeline and quiz panels.\nAutomatically starts quiz mode when quiz panel is selected and initializes \nthe current panel state."
            },
            {
              "kind": "method",
              "name": "openingTLDialog",
              "description": "Opens the timeline dialog for creating or editing events.\nThis method triggers the timeline dialog to become visible,\nallowing users to add new events to the timeline."
            },
            {
              "kind": "method",
              "name": "startQuiz",
              "description": "Initializes and starts the quiz with current timeline events.\nCollects all child event elements and passes them to the quiz component\nfor creating quiz questions."
            },
            {
              "kind": "method",
              "name": "saveQuizSelection",
              "description": "Saves the selected quiz feedback option and validates the selection.\nUpdates the quiz feedback display based on user selection and shows/hides\nvalidation errors as appropriate."
            }
          ],
          "events": [
            {
              "description": "Fired when a new event should be added to the timeline",
              "name": "request-add"
            },
            {
              "description": "Fired when an event should be removed from the timeline",
              "name": "request-remove"
            },
            {
              "description": "Fired when quiz feedback validation fails",
              "name": "show-quiz-feedback-error"
            }
          ],
          "attributes": [
            {
              "name": "tab-index",
              "type": {
                "text": "number"
              },
              "default": "-1",
              "description": "Tab index for keyboard navigation accessibility.",
              "fieldName": "tabIndex"
            },
            {
              "name": "current-panel",
              "type": {
                "text": "string"
              },
              "description": "Currently active panel ('timeline' or 'quiz').",
              "fieldName": "currentPanel"
            },
            {
              "name": "panelvisibility",
              "type": {
                "text": "string"
              },
              "description": "Controls which panels are visible in the interface.",
              "fieldName": "_panelVisibility"
            },
            {
              "name": "quiz-feedback-option",
              "description": "Selected quiz feedback option (1-4).\nDetermines what feedback is shown after quiz completion:\n- 1: Show correct answers only\n- 2: Show score and correct answers\n- 3: Show detailed explanations\n- 4: Show progress tracking",
              "fieldName": "quizFeedbackOption"
            }
          ],
          "superclass": {
            "name": "LitElementWw",
            "package": "@webwriter/lit"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "WebWriterTimeline",
          "declaration": {
            "name": "WebWriterTimeline",
            "module": "widgets/webwriter-timeline.ts"
          }
        }
      ]
    }
  ]
}
